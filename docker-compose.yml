version: '3'

services:
  postgres:
    image: 'postgres:15-alpine3.17'
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: core
    volumes:
      - ./db-data/:/var/lib/postgresql/
      - ./db-logs:/var/log/postgresql/
    healthcheck:
      test: ['CMD', 'psql', '-U', 'root', '-W', 'root', '-d', 'core']
      interval: 5s
      timeout: 5s
      retries: 6
      start_period: 5s
  graphql-engine:
    image: hasura/graphql-engine:v2.33.0
    ports:
      - '8080:8080'
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://root:root@postgres:5432/core
      PG_DATABASE_URL: postgres://root:root@postgres:5432/core
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://data-connector-agent:8081/api/v1/athena"},"mariadb":{"uri":"http://data-connector-agent:8081/api/v1/mariadb"},"mysql8":{"uri":"http://data-connector-agent:8081/api/v1/mysql"},"oracle":{"uri":"http://data-connector-agent:8081/api/v1/oracle"},"snowflake":{"uri":"http://data-connector-agent:8081/api/v1/snowflake"}}}}'
    depends_on:
      data-connector-agent:
        condition: service_healthy
  data-connector-agent:
    image: hasura/graphql-data-connector:v2.33.0
    ports:
      - 8081:8081
    environment:
      QUARKUS_LOG_LEVEL: ERROR # FATAL, ERROR, WARN, INFO, DEBUG, TRACE
      ## https://quarkus.io/guides/opentelemetry#configuration-reference
      QUARKUS_OTEL_SDK_DISABLED: 'true'
      ## QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8081/api/v1/athena/health']
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s
    depends_on:
      postgres:
        condition: service_healthy
